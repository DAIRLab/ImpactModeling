%% Newer IRB with Square Data
clear;
load('squareDataPhil.mat');

% Set up Constants
stepSize = 0.01;
sl = 0.06; %side length of square from data README
rho = sqrt(sl^2/6); %using I/m where I = m *s^4 / 12
m1 = 0.0485; %WHAT IS THE MASS????? Right now we have an area ratio 
                                    %approximation from ellipse

I1 = m1 * sl^2 / 6; %Moment of Inertia

Mass = [m1, 0, 0;
        0, m1, 0;
        0, 0, I1]; %generlaized Mass matrix

Tlength = 41;
errorVec = zeros (1,Tlength);

count  = 0; 

for i = 1:Tlength

    %Select trial
    trial = i;

    if sum(bounce_array(trial).flags) < 1
        % Finding pre and post impact velocities / states
        pre = squareDataPhil(trial).states(4:6)';
        post = squareDataPhil(trial).states(10:12)';

        d = (squareDataPhil(trial).d);   %tangential
        n = (squareDataPhil(trial).n);   %normal

        J = [d;n]; %Jacobian

        fun = @(P)(findError(P, Mass, J, pre, post));
        nonlcon = @(P)(constraint(P, Mass, J, pre, post));

        P0 = [0 0];
        A = []; % No other constraints
        b = [];
        Aeq = [];
        beq = [];
        lb = [];
        ub = [];
        options = optimoptions('fmincon','FiniteDifferenceType','central', ...
                    'StepTolerance',1e-10, 'Display','off');

        P = fmincon(fun, P0, A, b, Aeq, beq, lb, ub, nonlcon, options);

        error = findError(P, Mass, J, pre, post);

        count = count  + 1;
        errorVec(count) = error;

    end
end

avErr =  mean(errorVec, 2);
disp(avErr);

%%
figure()
semilogx(spacer, avErr);
hold on
%semilogx(spacer(avErr == min(avErr)), min(avErr), 'r*');
ylabel("Normalized l2 Norm Velocity Error");
xlabel("Scale in Cost Function for \theta_{dot}");
%title("IRB No Torque");


%%
figure()
plot(1:count, errorVec(:), '.')
xlabel("Unflagged Trial #")
ylabel("Error (Using Original Metric)");
title("Optimizing with Scaled Cost Function");


% figure()
% plot(yesWidth(1,:), yesWidth(2,:), '.');
% xlabel("|\omega_{observed} - \omega_{predicted}| ");
% ylabel("IRB Moment");
% title("Angular Velocity Error Vs. IRB Moment");
% 
% 
% figure()
% plot(1:count, errorVec(3,:), '.')
% xlabel("Trial")
% ylabel("Normalized Veloicty Error")
% title("Normal IRB (No Torque)");

%%
figure()
plot(1:2.5:50, avErr')
xlabel("Percent Decrease in Moment of Inertia");
ylabel("Average Error Across Non-Flagged Trials")
%title("Moment of Inertia vs Average Error");
